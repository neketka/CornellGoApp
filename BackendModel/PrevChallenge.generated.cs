//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v3.0.3.2
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;
using NetTopologySuite.Geometries;

namespace BackendModel
{
   /// <summary>
   /// A user&apos;s previous challenge
   /// </summary>
   [System.ComponentModel.Description("A user's previous challenge")]
   public partial class PrevChallenge
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected PrevChallenge()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static PrevChallenge CreatePrevChallengeUnsafe()
      {
         return new PrevChallenge();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="timestamp">Creation timestamp</param>
      /// <param name="challenge"></param>
      /// <param name="_user0"></param>
      public PrevChallenge(DateTime timestamp, global::BackendModel.Challenge challenge, global::BackendModel.User _user0)
      {
         this.Timestamp = timestamp;

         if (challenge == null) throw new ArgumentNullException(nameof(challenge));
         this.Challenge = challenge;

         if (_user0 == null) throw new ArgumentNullException(nameof(_user0));
         this._user0 = _user0;
         _user0.PrevChallenges.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="timestamp">Creation timestamp</param>
      /// <param name="challenge"></param>
      /// <param name="_user0"></param>
      public static PrevChallenge Create(DateTime timestamp, global::BackendModel.Challenge challenge, global::BackendModel.User _user0)
      {
         return new PrevChallenge(timestamp, challenge, _user0);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /// <summary>
      /// Required
      /// Creation timestamp
      /// </summary>
      [Required]
      [System.ComponentModel.Description("Creation timestamp")]
      public DateTime Timestamp { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required&lt;br/&gt;
      /// Challenge associated with this previous challenge
      /// </summary>
      [Description("Challenge associated with this previous challenge")]
      public virtual global::BackendModel.Challenge Challenge { get; set; }

   }
}

